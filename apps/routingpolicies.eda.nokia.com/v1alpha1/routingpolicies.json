{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/DeletedResourceEntry"
        },
        "type": "array"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "Metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "routingpolicies.eda.nokia.com",
                  "kind": "PrefixSet",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "readOnly": true,
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name"
        ],
        "title": "Metadata",
        "type": "object"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.Policy": {
        "description": "Policy is the Schema for the policys API",
        "properties": {
          "apiVersion": {
            "default": "routingpolicies.eda.nokia.com/v1alpha1",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Policy",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "spec": {
            "description": "Policy defines a set of rules and actions to manage network traffic or routing behavior, with statements that include matching conditions and actions, such as accepting or rejecting routes, or modifying route attributes like BGP parameters.",
            "properties": {
              "defaultAction": {
                "description": "The default action to apply if no other actions are defined.",
                "properties": {
                  "bgp": {
                    "description": "Actions related to the BGP protocol.",
                    "properties": {
                      "asPathPrepend": {
                        "description": "AS number to prepend to the AS Path attributes.",
                        "format": "int32",
                        "maximum": 4294967295,
                        "minimum": 1,
                        "title": "AS Path Prepend",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "ASPrependReplace"
                        }
                      },
                      "asPathRemove": {
                        "description": "Clear the AS path to make it empty.",
                        "title": "AS Path Remove",
                        "type": "boolean",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2
                        }
                      },
                      "asPathReplace": {
                        "description": "Replace the existing AS path with a new AS_SEQUENCE containing the listed AS numbers.",
                        "items": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "title": "AS Path Replace",
                        "type": "array",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 500,
                          "ui-single-line-group": "ASPrependReplace"
                        }
                      },
                      "localPreference": {
                        "description": "Set a new LOCAL_PREF value for matching BGP routes.",
                        "format": "int32",
                        "maximum": 4294967295,
                        "minimum": 0,
                        "title": "Set Local Preference",
                        "type": "integer",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "LocalPrefOrigin"
                        }
                      },
                      "setOrigin": {
                        "description": "Set a new ORIGIN attribute for matching BGP routes.",
                        "enum": [
                          "egp",
                          "igp",
                          "incomplete"
                        ],
                        "title": "Set Origin",
                        "type": "string",
                        "x-eda-nokia-com": {
                          "ui-column-span": 2,
                          "ui-order-priority": 400,
                          "ui-single-line-group": "SetOrigin"
                        }
                      }
                    },
                    "title": "BGP",
                    "type": "object",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  },
                  "policyResult": {
                    "description": "Final disposition for the route.",
                    "enum": [
                      "accept",
                      "reject"
                    ],
                    "title": "Policy Result",
                    "type": "string",
                    "x-eda-nokia-com": {
                      "ui-column-span": 2
                    }
                  }
                },
                "title": "Default Action",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-category": "Policies",
                  "ui-column-span": 2,
                  "ui-order-priority": 100
                }
              },
              "statement": {
                "description": "List of policy statements.",
                "items": {
                  "properties": {
                    "action": {
                      "description": "Actions for routes that match the policy statement.",
                      "properties": {
                        "bgp": {
                          "description": "Actions related to the BGP protocol.",
                          "properties": {
                            "asPathPrepend": {
                              "description": "AS number to prepend to the AS Path attributes.",
                              "format": "int32",
                              "maximum": 4294967295,
                              "minimum": 1,
                              "title": "AS Path Prepend",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 500,
                                "ui-single-line-group": "ASPrependReplace"
                              }
                            },
                            "asPathRemove": {
                              "description": "Clear the AS path to make it empty.",
                              "title": "AS Path Remove",
                              "type": "boolean",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2
                              }
                            },
                            "asPathReplace": {
                              "description": "Replace the existing AS path with a new AS_SEQUENCE containing the listed AS numbers.",
                              "items": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "title": "AS Path Replace",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 500,
                                "ui-single-line-group": "ASPrependReplace"
                              }
                            },
                            "localPreference": {
                              "description": "Set a new LOCAL_PREF value for matching BGP routes.",
                              "format": "int32",
                              "maximum": 4294967295,
                              "minimum": 0,
                              "title": "Set Local Preference",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400,
                                "ui-single-line-group": "LocalPrefOrigin"
                              }
                            },
                            "setOrigin": {
                              "description": "Set a new ORIGIN attribute for matching BGP routes.",
                              "enum": [
                                "egp",
                                "igp",
                                "incomplete"
                              ],
                              "title": "Set Origin",
                              "type": "string",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400,
                                "ui-single-line-group": "SetOrigin"
                              }
                            }
                          },
                          "title": "BGP",
                          "type": "object",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2
                          }
                        },
                        "policyResult": {
                          "description": "Final disposition for the route.",
                          "enum": [
                            "accept",
                            "reject"
                          ],
                          "title": "Policy Result",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2
                          }
                        }
                      },
                      "title": "Action",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 300
                      }
                    },
                    "match": {
                      "description": "Match conditions of the policy statement.",
                      "properties": {
                        "bgp": {
                          "description": "Configuration for BGP-specific policy match criteria.",
                          "properties": {
                            "evpnRouteType": {
                              "description": "Match conditions for EVPN route types.",
                              "items": {
                                "type": "integer"
                              },
                              "title": "EVPN Route Type",
                              "type": "array",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2
                              }
                            }
                          },
                          "title": "BGP",
                          "type": "object",
                          "x-eda-nokia-com": {
                            "ui-order-priority": 200
                          }
                        },
                        "family": {
                          "description": "Address families that the route belongs to.",
                          "items": {
                            "type": "string"
                          },
                          "title": "Family",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300
                          }
                        },
                        "prefixSet": {
                          "description": "Reference to a PrefixSet resource.",
                          "title": "Prefix Set",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-auto-completes": [
                              {
                                "condition": "true",
                                "group": "routingpolicies.eda.nokia.com",
                                "resource": "prefixsets",
                                "type": "gvr",
                                "version": "v1alpha1"
                              }
                            ],
                            "ui-column-span": 2,
                            "ui-order-priority": 400
                          }
                        },
                        "protocol": {
                          "description": "The route protocol type to match.",
                          "enum": [
                            "AGGREGATE",
                            "ARP_ND",
                            "BGP",
                            "BGP_EVPN",
                            "DHCP",
                            "GRIBI",
                            "HOST",
                            "ISIS",
                            "LOCAL",
                            "LINUX",
                            "NDK1",
                            "NDK2",
                            "OSPFV2",
                            "OSPFV3",
                            "STATIC"
                          ],
                          "title": "Protocol",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 100
                          }
                        }
                      },
                      "title": "Match",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 200
                      }
                    },
                    "name": {
                      "description": "Name of the policy statement.",
                      "title": "Name",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 4,
                        "ui-order-priority": 100,
                        "ui-unique-key": true
                      }
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "title": "Statements",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-category": "Policies",
                  "ui-column-span": 4,
                  "ui-may-reorder": true,
                  "ui-order-priority": 100
                }
              }
            },
            "title": "Specification",
            "type": "object"
          },
          "status": {
            "description": "PolicyStatus defines the observed state of Policy.",
            "readOnly": true,
            "title": "Status",
            "type": "object"
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PolicyList": {
        "description": "PolicyList is a list of policys",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PrefixSet": {
        "description": "PrefixSet is the Schema for the prefixsets API",
        "properties": {
          "apiVersion": {
            "default": "routingpolicies.eda.nokia.com/v1alpha1",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "PrefixSet",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "spec": {
            "description": "PrefixSet defines a collection of IP prefixes, which may include specific CIDR blocks or a range of prefixes. This set is typically used for matching routes or implementing routing policies.",
            "properties": {
              "prefix": {
                "description": "List of IPv4 or IPv6 prefixes in CIDR notation.",
                "items": {
                  "properties": {
                    "endRange": {
                      "description": "The end range when using a range to match prefixes.",
                      "maximum": 128,
                      "minimum": 0,
                      "title": "End Range",
                      "type": "integer",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 300,
                        "ui-single-line-group": "EndRange"
                      }
                    },
                    "exact": {
                      "description": "Indicates if it is an exact match. Ignores the StartRange and EndRange if this param is set.",
                      "title": "Exact",
                      "type": "boolean",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2
                      }
                    },
                    "prefix": {
                      "description": "The IPv4 or IPv6 prefix in CIDR notation with mask.",
                      "format": "ip",
                      "title": "Prefix",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "ASPrependReplace"
                      }
                    },
                    "startRange": {
                      "description": "If specifying a range, this is the start of the range.",
                      "maximum": 128,
                      "minimum": 0,
                      "title": "Start Range",
                      "type": "integer",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "StartRange"
                      }
                    }
                  },
                  "required": [
                    "prefix"
                  ],
                  "type": "object"
                },
                "title": "Prefixes",
                "type": "array"
              }
            },
            "required": [
              "prefix"
            ],
            "title": "Specification",
            "type": "object"
          },
          "status": {
            "description": "PrefixSetStatus defines the observed state of PrefixSet.",
            "readOnly": true,
            "title": "Status",
            "type": "object"
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList": {
        "description": "PrefixSetList is a list of prefixsets",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "title": "api for routingpolicies.eda.nokia.com/v1alpha1.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/routingpolicies.eda.nokia.com": {
      "get": {
        "description": "list versions available from routingpolicies.eda.nokia.com",
        "operationId": "getVersionRoutingpoliciesEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from routingpolicies.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesRoutingpoliciesEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for routingpolicies.eda.nokia.com v1alpha1",
        "operationId": "uiRoutingpoliciesEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys": {
      "delete": {
        "operationId": "deleteAllRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PolicyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Policy in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "list policys in namespace",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PolicyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Policy",
        "operationId": "createRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys/_deleted": {
      "get": {
        "operationId": "getDeletedRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Policy that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys/{name}": {
      "delete": {
        "description": "delete the specified Policy",
        "operationId": "deleteRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Policy to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Policy.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Policy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Policy",
        "operationId": "replaceRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.Policy"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/policys/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRoutingpoliciesEdaNokiaComV1alpha1NamespacePolicys",
        "parameters": [
          {
            "description": "name of the Policy to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Policy.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets": {
      "delete": {
        "operationId": "deleteAllRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of PrefixSet in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "list prefixsets in namespace",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a PrefixSet",
        "operationId": "createRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets/_deleted": {
      "get": {
        "operationId": "getDeletedRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of PrefixSet that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets/{name}": {
      "delete": {
        "description": "delete the specified PrefixSet",
        "operationId": "deleteRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the PrefixSet to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified PrefixSet.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the PrefixSet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a PrefixSet",
        "operationId": "replaceRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/namespaces/{namespace}/prefixsets/{name}/_revs": {
      "get": {
        "operationId": "getHistoryRoutingpoliciesEdaNokiaComV1alpha1NamespacePrefixsets",
        "parameters": [
          {
            "description": "name of the PrefixSet to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced PrefixSet.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/policys": {
      "get": {
        "description": "list policys",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1Policys",
        "parameters": [
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PolicyList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/routingpolicies.eda.nokia.com/v1alpha1/prefixsets": {
      "get": {
        "description": "list prefixsets",
        "operationId": "listRoutingpoliciesEdaNokiaComV1alpha1Prefixsets",
        "parameters": [
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.routingpolicies.v1alpha1.PrefixSetList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    }
  }
}
