{
  "components": {
    "schemas": {
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "WorkflowId": {
        "properties": {
          "id": {
            "description": "A workflow identifier; these are assigned by the system to a posted workflow.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "com.nokia.eda.os.v1alpha1.DeployImage": {
        "description": "DeployImage is the Schema for the deployimages API",
        "properties": {
          "apiVersion": {
            "default": "os.eda.nokia.com/v1alpha1",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "DeployImage",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImage_metadata"
          },
          "spec": {
            "description": "DeployImageSpec defines the desired state of DeployImage",
            "properties": {
              "canaries": {
                "items": {
                  "type": "string"
                },
                "title": "canaries",
                "type": "array"
              },
              "checks": {
                "properties": {
                  "checks": {
                    "description": "Checks to run before (pre) and after (post) any image changes",
                    "items": {
                      "enum": [
                        "Interface",
                        "DefaultBGP",
                        "PingISL",
                        "PingSystem"
                      ],
                      "type": "string"
                    },
                    "title": "checks",
                    "type": "array"
                  },
                  "force": {
                    "description": "Do not prompt for user input, even if checks fail",
                    "type": "boolean"
                  },
                  "skip": {
                    "description": "Do not run any checks",
                    "type": "boolean"
                  }
                },
                "required": [
                  "checks",
                  "force",
                  "skip"
                ],
                "title": "checks",
                "type": "object"
              },
              "drains": {
                "properties": {
                  "interfaceDisableSelectors": {
                    "items": {
                      "type": "string"
                    },
                    "title": "InterfaceDisableSelectors",
                    "type": "array"
                  },
                  "minimumWaitTime": {
                    "title": "minimumWaitTime",
                    "type": "integer"
                  },
                  "skip": {
                    "description": "Do not run any drains",
                    "title": "skip",
                    "type": "boolean"
                  }
                },
                "title": "drains",
                "type": "object"
              },
              "nodeProfile": {
                "title": "nodeProfile",
                "type": "string"
              },
              "nodeSelector": {
                "items": {
                  "type": "string"
                },
                "title": "nodeSelector",
                "type": "array"
              },
              "nodes": {
                "items": {
                  "type": "string"
                },
                "title": "nodes",
                "type": "array"
              },
              "prompt": {
                "items": {
                  "enum": [
                    "AfterPreChecks",
                    "AfterPostChecks"
                  ],
                  "type": "string"
                },
                "title": "prompt",
                "type": "array"
              },
              "tranches": {
                "items": {
                  "properties": {
                    "name": {
                      "title": "name",
                      "type": "string"
                    },
                    "nodeSelector": {
                      "items": {
                        "type": "string"
                      },
                      "title": "nodeSelector",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "title": "tranches",
                "type": "array"
              },
              "type": {
                "enum": [
                  "node",
                  "nodeselector",
                  "tranche"
                ],
                "title": "type",
                "type": "string"
              },
              "version": {
                "title": "version",
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "DeployImageStatus defines the observed state of DeployImage",
            "properties": {
              "id": {
                "description": "Id",
                "title": "ID",
                "type": "integer"
              },
              "result": {
                "description": "Aggregate result of the Flow",
                "title": "Result",
                "type": "string"
              }
            },
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.os.v1alpha1.DeployImage_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "os.eda.nokia.com",
                  "kind": "DeployImage",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Operating System Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/workflows/v1/os.eda.nokia.com/v1alpha1/namespaces/{namespace}/deployimages": {
      "post": {
        "description": "create a DeployImage",
        "operationId": "createOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "the namespace scope in which to create the DeployImage",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowId"
                }
              }
            },
            "description": "The response for a successful POST workflows request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "workflows"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
